<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" Condition="($(TargetFrameworkProfile) == '' or $(TargetFrameworkProfile) != 'Profile259') and $(TargetPlatformIdentifier) != 'UAP' and $(FrameworkIdentifier) != 'NetCore'"/>
    
  <PropertyGroup>
    <TestTemplatesRoot Condition="$(TestTemplatesRoot) == ''">$(MSBuildThisFileDirectory)..\..\</TestTemplatesRoot>
    <RepoRoot Condition="$(RepoRoot) == ''">$(MSBuildThisFileDirectory)..\..\</RepoRoot>
    <TestTemplatesPackagesRoot>$(TestTemplatesRoot)packages\</TestTemplatesPackagesRoot>
    <VisualStudioVersion Condition="'$(VisualStudioVersion)' == ''">15.0</VisualStudioVersion>
    <VSToolsPath Condition="'$(VSToolsPath)' == ''">$(MSBuildDirectory)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
  </PropertyGroup>

  <!-- Import props/targets with $(RepoRoot) since msbuild takes the relative path based on settings.targets and not with respect to the project. -->
  <Import Project="$(RepoRoot)packages\MicroBuild.Core.0.2.0\build\MicroBuild.Core.targets" Condition="Exists('$(RepoRoot)packages\MicroBuild.Core.0.2.0\build\MicroBuild.Core.targets')" />

  <Import Project="$(NUGET_PACKAGES)\microsoft.vssdk.buildtools\15.8.3247\tools\VSSDK\Microsoft.VsSDK.targets" Condition="'$(VSToolsPath)' != '' and '$(IsVsixProj)'=='true'" />
  
  <!-- Import localization specific Targets if enabled. -->
  <Import Project="$(RepoRoot)scripts\build\TestTemplates.Loc.targets" Condition="($(IsTest) == '' or $(IsTest) == 'false')" />

  <Import Project="$(NUGET_PACKAGES)\microsoft.vssdk.buildtools\15.8.3247\build\Microsoft.VSSDK.BuildTools.targets" Condition="$(IsVsixProj) == 'true' and Exists('$(RepoRoot)packages\microsoft.vssdk.buildtools.15.8.3247\build\Microsoft.VSSDK.BuildTools.targets')" />

  <ItemGroup>
    <None Include="$(TestTemplatesRoot)scripts\build\key.snk">
      <!-- Do not have this show up in Solution Explorer in VS -->
      <InProject>false</InProject>
    </None>
  </ItemGroup>

  <!-- StyleCop settings. -->
  <ItemGroup Condition="$(ShouldEnableStyleCop) != 'false' and $(IsVsixProj) != 'true'">
    <AdditionalFiles Include="$(TestTemplatesRoot)scripts\build\stylecop.json">
      <Link>stylecop.json</Link>
    </AdditionalFiles>
    
    <Analyzer Include="$(TestTemplatesPackagesRoot)StyleCop.Analyzers\1.0.0\analyzers\dotnet\cs\Newtonsoft.Json.dll" />
    <Analyzer Include="$(TestTemplatesPackagesRoot)StyleCop.Analyzers\1.0.0\analyzers\dotnet\cs\StyleCop.Analyzers.CodeFixes.dll" />
    <Analyzer Include="$(TestTemplatesPackagesRoot)StyleCop.Analyzers\1.0.0\analyzers\dotnet\cs\StyleCop.Analyzers.dll" />
  </ItemGroup> 

  <!-- Signing and Localization. -->
  <ItemGroup Condition="$(IsTest) == '' or $(IsTest) == 'false'">
    <FilesToSign Include="$(OutDir)\$(AssemblyName).dll" Condition="'$(IsVsixProj)' == '' or '$(IsVsixProj)' != 'true'">
      <Authenticode>Microsoft</Authenticode>
      <StrongName>StrongName</StrongName>
    </FilesToSign>

    <FilesToSign Include="$(OutDir)\$(AssemblyName).vsix" Condition="'$(IsVsixProj)' == 'true'">
      <Authenticode>VsixSHA2</Authenticode>
    </FilesToSign>
    
    <!--SignFilesDependsOn Include="GatherLocalizedOutputsForSigning">
      <InProject>false</InProject>
    </SignFilesDependsOn-->
  </ItemGroup>

  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('$(TestTemplatesPackagesRoot)MicroBuild.Core.0.2.0\build\MicroBuild.Core.props')" Text="$([System.String]::Format('$(ErrorText)', '$(TestTemplatesPackagesRoot)MicroBuild.Core.0.2.0\build\MicroBuild.Core.props'))" />
    <Error Condition="!Exists('$(TestTemplatesPackagesRoot)MicroBuild.Core.0.2.0\build\MicroBuild.Core.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(TestTemplatesPackagesRoot)MicroBuild.Core.0.2.0\build\MicroBuild.Core.targets'))" />
  </Target>
  
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild" Condition="$(IsVsixProj) == 'true'">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('$(TestTemplatesPackagesRoot)microsoft.vssdk.buildtools\15.8.3247\build\Microsoft.VSSDK.BuildTools.props')" Text="$([System.String]::Format('$(ErrorText)', '$(TestTemplatesPackagesRoot)microsoft.vssdk.buildtools.15.8.3247\build\Microsoft.VSSDK.BuildTools.props'))" />
    <Error Condition="!Exists('$(TestTemplatesPackagesRoot)microsoft.vssdk.buildtools\15.8.3247\build\Microsoft.VSSDK.BuildTools.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(TestTemplatesPackagesRoot)microsoft.vssdk.buildtools.15.8.3247\build\Microsoft.VSSDK.BuildTools.targets'))" />
  </Target>

  <!--Target Name="GatherLocalizedOutputsForSigning" DependsOnTargets="TestTemplatesLocalization">
    <ItemGroup>
      <FilesToSign Include="$(OutDir)\**\$(AssemblyName).resources.dll">
        <Authenticode>Microsoft</Authenticode>
        <StrongName>StrongName</StrongName>
      </FilesToSign>
    </ItemGroup>
  </Target-->

  <!-- Generate AssemblyInfo.cs -->
  <PropertyGroup>
    <TFBuildNumber Condition=" '$(TFBuildNumber)' == '' ">0.1</TFBuildNumber>
    <MajorVersion>14.0</MajorVersion>
    <AssemblyVersion>$(MajorVersion).0.0</AssemblyVersion>
    <BuildVersion Condition=" '$(BuildVersion)' == '' ">$(MajorVersion).$(TFBuildNumber)</BuildVersion>
  </PropertyGroup>
  <ItemGroup>
    <AssemblyVersionAttribute Include="System.Reflection.AssemblyVersionAttribute">
      <_Parameter1>$(AssemblyVersion)</_Parameter1>
    </AssemblyVersionAttribute>
    <AssemblyVersionAttribute Include="System.Reflection.AssemblyFileVersionAttribute">
      <_Parameter1>$(BuildVersion)</_Parameter1>
    </AssemblyVersionAttribute>
    <AssemblyVersionAttribute Include="System.Reflection.AssemblyInformationalVersionAttribute">
      <_Parameter1>$(BuildVersion)</_Parameter1>
    </AssemblyVersionAttribute>
  </ItemGroup>
  <Target Name="GenerateAssemblyInfoFile">
    <WriteCodeFragment AssemblyAttributes="@(AssemblyVersionAttribute)" Language="C#" OutputFile="$(MSBuildProjectDirectory)\GlobalAssemblyInfo.cs">
      <Output TaskParameter="OutputFile" ItemName="Compile" />
      <Output TaskParameter="OutputFile" ItemName="FileWrites" />
    </WriteCodeFragment>
  </Target>
  <PropertyGroup>
    <CompileDependsOn>GenerateAssemblyInfoFile;$(CompileDependsOn)</CompileDependsOn>
  </PropertyGroup>
</Project>
