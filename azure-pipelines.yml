variables:
  - name: Build.Repository.Clean
    value: true
  - name: _HelixType
    value: build/product
  - name: _HelixSource
    value: pr/dotnet/arcade-minimalci-sample/$(Build.SourceBranch)
  - name: _HelixTestType
    value: test/product/
  - name: _XUnitProject
    value: $(Build.SourcesDirectory)/HelloTests/HelloTests.csproj
  - name: _XUnitTargetFramework
    value: netcoreapp2.0
  - name: _XUnitRunnerVersion
    value: 2.4.1
  - name: _DotNetCliPackageType
    value: sdk
  - name: _DotNetCliVersion
    value: 2.1.403

resources:
  containers:
  - container: LinuxContainer
    image: microsoft/dotnet-buildtools-prereqs:ubuntu-14.04-cross-0cd4667-20170319080304

# CI and PR triggers
trigger:
- master

pr:
- master

jobs:
- template: /eng/common/templates/job/job.yml
  parameters:
    name: Windows_NT
    enableTelemetry: true
    enablePublishBuildArtifacts: true
    helixRepo: dotnet/arcade-minimalci-sample
    pool:
      name: NetCorePublic-Int-Pool
      queue: Windows.10.Amd64.Open
    strategy:
      matrix:
        debug_configuration:
          _BuildConfig: Debug
        release_configuration:
          _BuildConfig: Release
    steps:
    - script: eng\common\cibuild.cmd
        -configuration $(_BuildConfig)
        -prepareMachine
      name: Build
      displayName: Build
      condition: succeeded()
    - template: /eng/common/templates/steps/send-to-helix.yml
      parameters:
        HelixSource: $(_HelixSource)
        HelixType: $(_HelixTestType)
        HelixTargetQueues: Windows.10.Amd64.Open;Windows.81.Amd64.Open;Windows.7.Amd64.Open
        XUnitProjects: $(_XUnitProject)
        XUnitPublishTargetFramework: $(_XUnitTargetFramework)
        XUnitRuntimeTargetFramework: $(_XUnitTargetFramework)
        XUnitRunnerVersion: $(_XUnitRunnerVersion)
        IncludeDotNetCli: true
        DotNetCliPackageType: $(_DotNetCliPackageType)
        DotNetCliVersion: $(_DotNetCliVersion)
        EnableXUnitReporter: true
        WaitForWorkItemCompletion: true
        IsExternal: true
        Creator: arcade-minimalci-sample
        condition: eq(variables['_BuildConfig'], 'Debug')
    - task: PublishBuildArtifacts@1
      displayName: Publish Logs to VSTS
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)/artifacts/log/$(_BuildConfig)'
        PublishLocation: Container
        ArtifactName: $(Agent.Os)_$(Agent.JobName)
      continueOnError: true
      condition: always()
    variables:
      _HelixBuildConfig: $(_BuildConfig)

- template: /eng/common/templates/job/job.yml
  parameters:
    name: OSX
    enableTelemetry: true
    enablePublishBuildArtifacts: true
    helixRepo: dotnet/arcade-minimalci-sample
    pool:
      name: NetCorePublic-Int-Pool
      queue: OSX.1012.Amd64.Open
    strategy:
      matrix:
        debug_configuration:
          _BuildConfig: Debug
        release_configuration:
          _BuildConfig: Release
    steps:
    - script: eng/common/cibuild.sh
        --configuration $(_BuildConfig)
        --prepareMachine
      name: Build
      displayName: Build
      condition: succeeded()
    - template: /eng/common/templates/steps/send-to-helix.yml
      parameters:
        HelixSource: $(_HelixSource)
        HelixType: $(_HelixTestType)
        HelixTargetQueues: OSX.1012.Amd64.Open;OSX.1013.Amd64.Open
        XUnitProjects: $(_XUnitProject)
        XUnitPublishTargetFramework: $(_XUnitTargetFramework)
        XUnitRuntimeTargetFramework: $(_XUnitTargetFramework)
        XUnitRunnerVersion: $(_XUnitRunnerVersion)
        IncludeDotNetCli: true
        DotNetCliPackageType: $(_DotNetCliPackageType)
        DotNetCliVersion: $(_DotNetCliVersion)
        EnableXUnitReporter: true
        WaitForWorkItemCompletion: true
        IsExternal: true
        Creator: arcade-minimalci-sample
        condition: eq(variables['_BuildConfig'], 'Debug')
    - task: PublishBuildArtifacts@1
      displayName: Publish Logs to VSTS
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)/artifacts/log/$(_BuildConfig)'
        PublishLocation: Container
        ArtifactName: $(Agent.Os)_$(Agent.JobName)
      continueOnError: true
      condition: always()
    variables:
      _HelixBuildConfig: $(_BuildConfig)

- template: /eng/common/templates/job/job.yml
  parameters:
    name: Linux
    enableTelemetry: true
    enablePublishBuildArtifacts: true
    helixRepo: dotnet/arcade-minimalci-sample
    pool:
      name: Hosted Ubuntu 1604
    container: LinuxContainer
    strategy:
      matrix:
        debug_configuration:
          _BuildConfig: Debug
        release_configuration:
          _BuildConfig: Release
    steps:
    - script: eng/common/cibuild.sh
        --configuration $(_BuildConfig)
        --prepareMachine
      name: Build
      displayName: Build
      condition: succeeded()
    - template: /eng/common/templates/steps/send-to-helix.yml
      parameters:
        HelixSource: $(_HelixSource)
        HelixType: $(_HelixTestType)
        HelixTargetQueues: Debian.9.Amd64.Open;Fedora.27.Amd64.Open;RedHat.7.Amd64.Open;Ubuntu.1604.Amd64.Open
        XUnitProjects: $(_XUnitProject)
        XUnitPublishTargetFramework: $(_XUnitTargetFramework)
        XUnitRuntimeTargetFramework: $(_XUnitTargetFramework)
        XUnitRunnerVersion: $(_XUnitRunnerVersion)
        IncludeDotNetCli: true
        DotNetCliPackageType: $(_DotNetCliPackageType)
        DotNetCliVersion: $(_DotNetCliVersion)
        EnableXUnitReporter: true
        WaitForWorkItemCompletion: true
        IsExternal: true
        Creator: arcade-minimalci-sample
        condition: eq(variables['_BuildConfig'], 'Debug')
    - task: PublishBuildArtifacts@1
      displayName: Publish Logs to VSTS
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)/artifacts/log/$(_BuildConfig)'
        PublishLocation: Container
        ArtifactName: $(Agent.Os)_$(Agent.JobName)
      continueOnError: true
      condition: always()
    variables:
      _HelixBuildConfig: $(_BuildConfig)
